name: Build APK

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Load google-services.json and local.properties from the secrets
      - name: Decode secrets
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties

      # Decode the keystore
      - name: Decode release keystore
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        run: |
          echo "$RELEASE_KEYSTORE" | base64 --decode > ./app/release-key.jks
          
      - name: Debug alias
        run: echo $RELEASE_KEY_ALIAS
        env:
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}

      # Cache Gradle packages to speed up the build process
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      # Build APK (or AAB)
      - name: Build APK
        run: ./gradlew assembleRelease

      # Sign the APK (after building it)
      - name: Sign the APK
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore ./app/release-key.jks \
          -storepass $RELEASE_KEYSTORE_PASSWORD \
          -keypass $RELEASE_KEY_PASSWORD \
          app/build/outputs/apk/release/app-release-unsigned.apk $RELEASE_KEY_ALIAS

      # Optionally, rename the signed APK for consistency
      - name: Rename signed APK
        run: |
          mv app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release-signed.apk

      # Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: M1-APK
          path: app/build/outputs/apk/release/app-release-signed.apk
