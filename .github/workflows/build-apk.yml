name: Build APK

on:
  push:
    branches:
      - main

  pull_request:
          types:
            - opened
            - synchronize
            - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Load google-services.json and local.properties from the secrets
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
            echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties

      # Decode the keystore
      - name: Decode release keystore
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        run: |
          echo "$RELEASE_KEYSTORE" | base64 --decode > ./app/release-key.jks

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Set up the signing configuration in the Gradle build
      - name: Setup signing configuration
        run: |
          echo "RELEASE_STORE_FILE=app/release-key.jks" >> local.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" >> local.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> local.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> local.properties

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
            name: M1-APK
            path: app/build/outputs/apk/release/app-release.apk
